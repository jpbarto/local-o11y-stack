receivers:
  otlp:
    protocols:
      grpc:
        endpoint: ${env:OTEL_COLLECTOR_HOST}:${env:OTEL_COLLECTOR_PORT_GRPC}
      http:
        endpoint: ${env:OTEL_COLLECTOR_HOST}:${env:OTEL_COLLECTOR_PORT_HTTP}
        cors:
          allowed_origins:
            - "http://*"
            - "https://*"
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otelcol'
          scrape_interval: 10s
          static_configs:
            - targets: ['0.0.0.0:8888']

exporters:
  debug:
    verbosity: detailed

  otlp/jaeger:
    endpoint: "jaeger:4317"
    tls:
      insecure: true

  otlphttp/prometheus:
    endpoint: "http://prometheus:9090/api/v1/otlp"
    tls:
      insecure: true

  opensearch:
    logs_index: otel
    http:
      endpoint: "http://opensearch:9200"
      tls:
        insecure: true

#  prometheus:
#    endpoint: 0.0.0.0:8889

processors:
  batch:
    timeout: 100ms
  transform:
    error_mode: ignore
    trace_statements:
      - context: span
        statements:
          - replace_pattern(name, "\\?.*", "")
          - replace_match(name, "GET /api/products/*", "GET /api/products/{productId}")

connectors:
  spanmetrics:

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [transform, batch]
      exporters: [debug, otlp/jaeger, spanmetrics]
    metrics:
      receivers: [otlp, prometheus, spanmetrics]
      processors: [batch]
      exporters: [debug, otlphttp/prometheus]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [opensearch, debug]
